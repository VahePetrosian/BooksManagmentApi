name: Push image to GHCR & run on EC2

on:
  workflow_dispatch:

env:
  IMAGE_NAME: books_rest_api

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Determine EC2 public address
        run: |
          echo 'EC2_HOST_ADDRESS<<EOF' >> $GITHUB_ENV
          aws ec2 describe-instances --filters Name=tag:'aws:cloudformation:logical-id',Values='BooksApiInstance' --query 'Reservations[*].Instances[*].PublicDnsName' --output text | sed  '/^$/d' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo $EC2_HOST_ADDRESS

      - name: Print host address
        run: |
          echo IMAGE_ID=$EC2_HOST_ADDRESS

      - name: Build image
        run: docker build . --file BooksManagmentApi/Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: SSH to EC2 & run docker
        uses: appleboy/ssh-action@master
        env:
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: echo "${EC2_HOST_ADDRESS}"
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          envs: GHCR_USERNAME, GHCR_PASSWORD
          script: |
            sudo service docker start
            sudo docker login --username $GHCR_USERNAME --password $GHCR_PASSWORD  ghcr.io/vahepetrosian/books_rest_api
            sudo docker run -d -p 80:80 ghcr.io/vahepetrosian/books_rest_api:latest
